<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.junbaobao.mapper.PcUacUserTokenMapper">
  <resultMap id="BaseResultMap" type="com.junbaobao.model.PcUacUserToken">
    <!--@mbg.generated-->
    <!--@Table pc_uac_user_token-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="os" jdbcType="VARCHAR" property="os" />
    <result column="browser" jdbcType="VARCHAR" property="browser" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_location" jdbcType="VARCHAR" property="loginLocation" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="token_type" jdbcType="VARCHAR" property="tokenType" />
    <result column="access_token_validity" jdbcType="INTEGER" property="accessTokenValidity" />
    <result column="refresh_token_validity" jdbcType="INTEGER" property="refreshTokenValidity" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="last_operator" jdbcType="VARCHAR" property="lastOperator" />
    <result column="last_operator_id" jdbcType="BIGINT" property="lastOperatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, version, pid, login_name, user_name, user_id, os, browser, login_ip, login_location, 
    login_time, access_token, refresh_token, token_type, access_token_validity, refresh_token_validity, 
    `status`, group_id, group_name, creator, creator_id, created_time, last_operator, 
    last_operator_id, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from pc_uac_user_token
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from pc_uac_user_token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.junbaobao.model.PcUacUserToken" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into pc_uac_user_token (version, pid, login_name, 
      user_name, user_id, os, 
      browser, login_ip, login_location, 
      login_time, access_token, refresh_token, 
      token_type, access_token_validity, refresh_token_validity, 
      `status`, group_id, group_name, 
      creator, creator_id, created_time, 
      last_operator, last_operator_id, update_time
      )
    values (#{version,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{os,jdbcType=VARCHAR}, 
      #{browser,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, #{loginLocation,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{accessToken,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, 
      #{tokenType,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER}, #{refreshTokenValidity,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{groupId,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{lastOperator,jdbcType=VARCHAR}, #{lastOperatorId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.junbaobao.model.PcUacUserToken" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into pc_uac_user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="version != null">
        version,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="os != null">
        os,
      </if>
      <if test="browser != null">
        browser,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginLocation != null">
        login_location,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="tokenType != null">
        token_type,
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity,
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="lastOperator != null">
        last_operator,
      </if>
      <if test="lastOperatorId != null">
        last_operator_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="os != null">
        #{os,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginLocation != null">
        #{loginLocation,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenType != null">
        #{tokenType,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperator != null">
        #{lastOperator,jdbcType=VARCHAR},
      </if>
      <if test="lastOperatorId != null">
        #{lastOperatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junbaobao.model.PcUacUserToken">
    <!--@mbg.generated-->
    update pc_uac_user_token
    <set>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="os != null">
        os = #{os,jdbcType=VARCHAR},
      </if>
      <if test="browser != null">
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginLocation != null">
        login_location = #{loginLocation,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="tokenType != null">
        token_type = #{tokenType,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperator != null">
        last_operator = #{lastOperator,jdbcType=VARCHAR},
      </if>
      <if test="lastOperatorId != null">
        last_operator_id = #{lastOperatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junbaobao.model.PcUacUserToken">
    <!--@mbg.generated-->
    update pc_uac_user_token
    set version = #{version,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      login_name = #{loginName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      os = #{os,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_location = #{loginLocation,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      access_token = #{accessToken,jdbcType=VARCHAR},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      token_type = #{tokenType,jdbcType=VARCHAR},
      access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=BIGINT},
      group_name = #{groupName,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_operator = #{lastOperator,jdbcType=VARCHAR},
      last_operator_id = #{lastOperatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>